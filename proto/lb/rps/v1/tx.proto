syntax = "proto3";
package lb.rps.v1;

import "lb/rps/v1/types.proto";
import "gogoproto/gogo.proto";
import "cosmos_proto/cosmos.proto";
import "cosmos/msg/v1/msg.proto";

option go_package = "challenge/x/rps/types"; // store the generated files here

service Msg {
  option (cosmos.msg.v1.service) = true;

  rpc CreateStudent(MsgCreateStudent) returns (MsgCreateStudentResponse);
  rpc DeleteStudent(MsgDeleteStudent) returns (MsgDeleteStudentResponse);
}

message MsgCreateStudent {
  option (cosmos.msg.v1.signer) = "id";

  string id = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
  string name = 2;
  uint32 age = 3;
}

message MsgCreateStudentResponse {
  lb.rps.v1.Student student = 1;
}

message MsgDeleteStudent {
  option (cosmos.msg.v1.signer) = "id";

  string id = 1 [(cosmos_proto.scalar) = "cosmos.AddressString"];
}

message MsgDeleteStudentResponse {

}
